@model Cameo.ViewModels.VideoRequestDetailsVM
@using Cameo.Common
@using Cameo.Utils

@{
    ViewData["Title"] = "Детали Запроса";
}

<br />
<div class="row">
    <div class="col-sm-6">
        <h2>@ViewData["Title"]</h2>
        <hr />

        @*@if (Model.VideoIsPaid)
        {
            <div class="row">
                <div class="col-sm-12">
                    <p>Запрос завершен - <a href="/Video/Details/@Model.ID">Перейти к видео</a></p>
                </div>
            </div>
            <br />
        }*@

        <div>
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.ID)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.ID)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.To)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.To)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.From)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.From)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Instructions)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Instructions)
                </dd>
                @*<dt>
                    @Html.DisplayNameFor(model => model.Email)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Email)
                </dd>*@
                <dt>
                    @Html.DisplayNameFor(model => model.IsNotPublic)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.IsNotPublic)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Price)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Price)
                </dd>
                @*<dt>
                    @Html.DisplayNameFor(model => model.VideoDeadline)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.VideoDeadline)
                </dd>*@

                <dt>
                    @Html.DisplayNameFor(model => model.Status.ID)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Status.ID)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Status.Name)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Status.Name)
                </dd>
            </dl>
        </div>

        <div class="row">
            <div class="col-sm-12">
                @if (Model.CancelBtnIsAvailable)
                {
                    <button type="button" class="btn btn-danger btn-sm" onclick="CancelRequest(@Model.ID);">Отменить</button>
                }
            </div>
        </div>
    </div>
    <div class="col-sm-6">
        @*@if (Model.Video.ID > 0)
        {
            <video id="imgContainer_@Model.ID" width="240" height="320" controls><source src="/Video/GetIncompletedVideo/@Model.ID" type="video/mp4"></video>
            if (!Model.VideoConfirmed && !Model.VideoIsPaid)
            {
                <button type="button" class="btn btn-danger btn-sm" id="deleteBtn_@Model.ID" onclick="DeleteVideo(@Model.Video.ID, @Model.ID);" title="Удалить Видео"><i class="glyphicon glyphicon-remove-sign"></i></button>
            }
        }

        @if (Model.VideoConfirmed)
        {
            <div class="alert alert-success"><small>Видео подтверждено</small></div>
        }
        else
        {*@
            @*if (!Model.BalanceAllowsToConfirm && Model.CancelBtnIsAvailable)
            {
                <div class="alert alert-danger">
                    <small><i>У Вас недостаточно средств, чтобы подтвердить запрос.</i></small>
                </div>
            }

            if (Model.UploadVideoBtnIsAvailable)
            {
                if (Model.Video.ID > 0)
                {
                    if (Model.BalanceAllowsToConfirm)
                    {
                        <div class="alert alert-warning"><small>Видео еще не подтверждено. Для завершения запроса, пожалуйста, подтвердите</small></div>
                        <button type="button" class="btn btn-success btn-sm" onclick="ConfirmVideo(@Model.ID);">Подтвердить</button>
                    }
                }

                <img id="spinner_@Model.ID" src="@AppData.Configuration.SpinnerUrl" style="display: none; height:20px;" />
                <input type="file" id="imgInp_@Model.ID" onchange="VideoAjaxUpload(this, @Model.ID, '@Constants.FileTypes.VIDEO_REQUEST_VIDEO', 'spinner_@Model.ID', 'imgContainer_@Model.ID');" />
            }
            else if (Model.CancelBtnIsAvailable)
            {
                <div class="alert alert-warning">
                    <small><i>Текущий статус запроса не позволяет загрузить видео.</i></small>
                </div>
            }*@
        }
    </div>
</div>

<div>
    @*@Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ }) |*@
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    <script src="~/js/FileAjaxUpload.js"></script>
    <script>
        function CancelRequest(requestID)
        {
            $(".btn").attr("disabled", "disabled");

            $.ajax({
                type: "POST",
                url: "/VideoRequest/Cancel?id=" + requestID,
                //data: {
                //    id: requestID
                //},
                //data: JSON.stringify({
                //    id: requestID
                //}),
                contentType: "application/json; charset=utf-8",
                //dataType: "json",
                success: function (data) {
                    //alert("success");
                    //alert(data);
                },
                error: function (data) {
                    //alert("error");
                    console.log(data);
                },
                complete: function (data) {
                    //alert("completed");
                    $(".btn").removeAttr("disabled");
                }
            });
        }

        function DeleteVideo(videoID, requestID)
        {
            FileAjaxDelete(videoID, requestID, "@Constants.FileTypes.VIDEO_REQUEST_VIDEO", "spinner_" + requestID, "imgContainer_" + requestID, "deleteBtn_" + requestID);
        }

        function ConfirmVideo(requestID)
        {
            $(".btn").attr("disabled", "disabled");

            $.ajax({
                type: "POST",
                url: "/VideoRequest/ConfirmVideo?id=" + requestID,
                //data: {
                //    id: requestID
                //},
                //data: JSON.stringify({
                //    id: requestID
                //}),
                contentType: "application/json; charset=utf-8",
                //dataType: "json",
                success: function (data) {
                    //alert("success");
                    //alert(data);
                },
                error: function (data) {
                    //alert("error");
                    console.log(data);
                },
                complete: function (data) {
                    //alert("completed");
                    $(".btn").removeAttr("disabled");
                }
            });
        }
    </script>
}