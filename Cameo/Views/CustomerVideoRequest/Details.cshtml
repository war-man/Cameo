@model Cameo.ViewModels.VideoRequestDetailsVM

@{
    ViewData["Title"] = "Детали Запроса";
}

<br />
<div class="row">
    <div class="col-sm-6">
        <h2>@ViewData["Title"]</h2>
        <hr />

        @if (Model.VideoIsPaid)
        {
            <div class="row">
                <div class="col-sm-12">
                    <p>Запрос завершен - <a href="/Video/Details/@Model.ID">Перейти к видео</a></p>
                </div>
            </div>
            <br />
        }

        <div>
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.ID)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.ID)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.To)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.To)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.From)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.From)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Instructions)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Instructions)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Email)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Email)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.IsNotPublic)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.IsNotPublic)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Price)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Price)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.VideoDeadline)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.VideoDeadline)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Status.ID)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Status.ID)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Status.Name)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Status.Name)
                </dd>
            </dl>
        </div>

        <div class="row">
            <div class="col-sm-12">
                @if (Model.CancelBtnIsAvailable)
                {
                    <button type="button" class="btn btn-danger btn-sm" onclick="CancelRequest(@Model.ID);">Отменить</button>
                }

                @if (Model.Payable)
                {
                    <b>Видео готово!</b> <button type="button" class="btn btn-success btn-sm" onclick="MakePayment(@Model.ID);">Оплатить!</button>
                }

                @if (Model.EditBtnIsAvailable)
                {
                    <button type="button" class="btn btn-sm btn-primary" data-toggle="modal" data-target="#editBookModal">
                        Редактировать
                    </button>
                }
            </div>
        </div>
    </div>
    <div class="col-sm-6">
        Here will be some instructions like on cameo
    </div>
</div>

<div>
    @*@Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ }) |*@
    <a asp-action="Index">Back to List</a>
</div>

@if (Model.EditBtnIsAvailable)
{
    <!-- Modal -->
    <div id="editBookModal" class="modal fade" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Редактировать запрос</h4>
                </div>
                <div class="modal-body">
                    <form asp-action="Edit" asp-controller="VideoRequest"
                          data-ajax="true"
                          data-ajax-method="POST"
                          data-ajax-mode="replace"
                          data-ajax-update="#ajaxresult"
                          data-ajax-success="EditBookSuccess"
                          data-ajax-failure="EditBookFailure"
                          data-ajax-complete="EditBookComplete">
                        <div id="ajaxresult">
                            @await Html.PartialAsync(
                                "/Views/VideoRequest/_Edit.cshtml",
                                ViewBag.editModelVM as Cameo.ViewModels.VideoRequestEditVM)
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>

        </div>
    </div>
}

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        function CancelRequest(requestID)
        {
            $(".btn").attr("disabled", "disabled");

            $.ajax({
                type: "POST",
                url: "/VideoRequest/Cancel?id=" + requestID,
                //data: {
                //    id: requestID
                //},
                //data: JSON.stringify({
                //    id: requestID
                //}),
                contentType: "application/json; charset=utf-8",
                //dataType: "json",
                success: function (data)
                {
                    //alert("success");
                    //alert(data);
                },
                error: function (data)
                {
                    //alert("error");
                    console.log(data);
                },
                complete: function (data)
                {
                    //alert("completed");
                    $(".btn").removeAttr("disabled");
                }
            });
        }

        function MakePayment(requestID)
        {
            $(".btn").attr("disabled", "disabled");

            $.ajax({
                type: "POST",
                url: "/VideoRequest/MakePayment?id=" + requestID,
                //data: {
                //    id: requestID
                //},
                //data: JSON.stringify({
                //    id: requestID
                //}),
                contentType: "application/json; charset=utf-8",
                //dataType: "json",
                success: function (data)
                {
                    //alert("success");
                    //alert(data);
                },
                error: function (data)
                {
                    //alert("error");
                    console.log(data);
                },
                complete: function (data)
                {
                    //alert("completed");
                    $(".btn").removeAttr("disabled");
                }
            });
        }
    </script>

    <script>
        function EditBookSuccess(data)
        {
            console.log("Success");
            console.log(data);
            location.reload();
        }

        function EditBookFailure(data)
        {
            console.log("Failure");
            console.log(data);
        }

        function EditBookComplete(data)
        {
            console.log("Complete");
            console.log(data);
        }
    </script>
}