@model Cameo.ViewModels.VideoRequestDetailsVM

@{
    ViewData["Title"] = "Детали заказа";
    Layout = "~/Views/Shared/_LayoutDaven.cshtml";
}

<div class="row bg-color ptb_md--60 ptb_sm--60" data-bg-color="#ffffff">
    <div class="container">
        <div class="row">
            <div class="col-lg-6 mt--30">
                <!-- Start Single Blog -->
                <div class="blog blog_style--1">
                    <div class="inner">
                        <h3 class="fontWeight600 font-2 heading-divider heading-divider__themeColor  mb--15 mt--10 font--32">@ViewData["Title"]</h3>
                        <dl class="dl-horizontal font--16 mb--35">
                            @*<dt>
                                @Html.DisplayNameFor(model => model.ID)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.ID)
                            </dd>*@
                            <dt>
                                @Html.DisplayNameFor(model => model.Talent)
                            </dt>
                            <dd>
                                <a href="/talents/details/@Model.Talent.Username">@Model.Talent.FullName</a>
                            </dd>
                            <dt>
                                @Html.DisplayNameFor(model => model.To)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.To)
                            </dd>
                            @if (!string.IsNullOrWhiteSpace(Model.From))
                            {
                                <dt>
                                    @Html.DisplayNameFor(model => model.From)
                                </dt>
                                <dd>
                                    @Html.DisplayFor(model => model.From)
                                </dd>
                            }
                            
                            <dt>
                                @Html.DisplayNameFor(model => model.Instructions)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.Instructions)
                            </dd>
                            @*<dt>
                                @Html.DisplayNameFor(model => model.Email)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.Email)
                            </dd>*@
                            <dt>
                                @*@Html.DisplayNameFor(model => model.IsNotPublic)*@
                            </dt>
                            <dd>
                                @if (Model.IsNotPublic)
                                {
                                    <small><i>Видео скрыто от других</i></small>
                                }
                                @*@Html.DisplayFor(model => model.IsNotPublic)*@
                            </dd>
                            <dt>
                                @Html.DisplayNameFor(model => model.Price)
                            </dt>
                            <dd>
                                @Model.PriceStr сум<br />
                                <small><i>Стоимость запроса: @Model.RequestPriceStr сум</i></small><br />
                                <small><i>Осталось доплатить: @Model.RemainingPriceStr сум</i></small>
                            </dd>

                            @*<dt>
                                @Html.DisplayNameFor(model => model.Status.ID)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.Status.ID)
                            </dd>*@
                            <dt>
                                @Html.DisplayNameFor(model => model.Status)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.Status.Name)
                            </dd>

                            <dt>
                                @Html.DisplayNameFor(model => model.VideoDeadline)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.VideoDeadline)
                            </dd>
                        </dl>
                        @*<p class="font--16 mb--35">All the rumors have finally died down and many skeptics have tightened their lips, the iPod does support video format now on its fifth generation.</p>*@
                        <div class="blog-btn">
                            @if (Model.EditBtnIsAvailable)
                            {
                                <a class="button-link button-size__lg button__transparent--border" href="/VideoRequest/Edit/@Model.ID"><span class="button-text__13">Редактировать</span> </a>
                            }

                            @if (Model.EditBtnIsAvailable)
                            {
                                <button type="button" class="btn btn-link" onclick="CancelRequest(@Model.ID);">Отменить</button>
                            }
                        </div>
                    </div>
                </div>
                <!-- End Single Blog -->

                @if (Model.VideoIsPaid)
                {
                    <div class="row">
                        <div class="col-sm-12">
                            <p>Запрос завершен - <a href="/Video/Details/@Model.ID">Перейти к видео</a></p>
                        </div>
                    </div>
                    <br />
                }

                <div class="row">
                    <div class="col-sm-12">
                        @*@if (Model.CancelBtnIsAvailable)
                        {
                            <button type="button" class="btn btn-danger btn-sm" onclick="CancelRequest(@Model.ID);">Отменить</button>
                        }*@

                        @if (Model.Payable)
                        {
                            <b>Видео готово!</b> <button type="button" class="btn btn-success btn-sm" onclick="MakePayment(@Model.ID);">Оплатить!</button>
                        }

                        @*@if (Model.EditBtnIsAvailable)
                        {
                            <button type="button" class="btn btn-sm btn-primary" data-toggle="modal" data-target="#editBookModal">
                                Редактировать
                            </button>
                        }*@
                    </div>
                </div>
            </div>
            <div class="col-lg-6 mt--30 mb--30">

                Here will be some instructions like on cameo

            </div>
        </div>
        <div class="row mt--30">
            <div class="col-12">
                <a asp-action="Index">Back to List</a>
            </div>
        </div>
    </div>
</div>


@*@if (Model.EditBtnIsAvailable)
{
    <!-- Modal -->
    <div id="editBookModal" class="modal fade" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Редактировать запрос</h4>
                </div>
                <div class="modal-body">
                    <form asp-action="Edit" asp-controller="VideoRequest"
                          data-ajax="true"
                          data-ajax-method="POST"
                          data-ajax-mode="replace"
                          data-ajax-update="#ajaxresult"
                          data-ajax-success="EditBookSuccess"
                          data-ajax-failure="EditBookFailure"
                          data-ajax-complete="EditBookComplete">
                        <div id="ajaxresult">
                            @await Html.PartialAsync(
                                "/Views/VideoRequest/_Edit.cshtml",
                                ViewBag.editModelVM as Cameo.ViewModels.VideoRequestEditVM)
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>

        </div>
    </div>
}*@

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        function CancelRequest(requestID)
        {
            if (!confirm("Вы уверены, что хотите отменить заказ?"))
                return;

            $.ajax({
                type: "POST",
                url: "/VideoRequest/Cancel?id=" + requestID,
                //data: {
                //    id: requestID
                //},
                //data: JSON.stringify({
                //    id: requestID
                //}),
                contentType: "application/json; charset=utf-8",
                //dataType: "json",
                beforeSend: function (data)
                {
                    $(".btn").attr("disabled", "disabled");
                },
                success: function (data)
                {
                    //alert("success");
                    //alert(data);
                    location.reload();
                },
                error: function (data)
                {
                    alert("Ajax error (status code = " + data.status + "): " + data.statusText);
                },
                complete: function (data)
                {
                    //alert("completed");
                    $(".btn").removeAttr("disabled");
                }
            });
        }

        function MakePayment(requestID)
        {
            $(".btn").attr("disabled", "disabled");

            $.ajax({
                type: "POST",
                url: "/VideoRequest/MakePayment?id=" + requestID,
                //data: {
                //    id: requestID
                //},
                //data: JSON.stringify({
                //    id: requestID
                //}),
                contentType: "application/json; charset=utf-8",
                //dataType: "json",
                success: function (data)
                {
                    //alert("success");
                    //alert(data);
                },
                error: function (data)
                {
                    //alert("error");
                    console.log(data);
                },
                complete: function (data)
                {
                    //alert("completed");
                    $(".btn").removeAttr("disabled");
                }
            });
        }
    </script>

    <script>
        function EditBookSuccess(data)
        {
            console.log("Success");
            console.log(data);
            location.reload();
        }

        function EditBookFailure(data)
        {
            console.log("Failure");
            console.log(data);
        }

        function EditBookComplete(data)
        {
            console.log("Complete");
            console.log(data);
        }
    </script>
}