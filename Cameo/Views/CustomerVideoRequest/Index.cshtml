@using Cameo.Models.Enums

@{
    ViewData["Title"] = "Мои запросы на видео";
    ViewData["userType"] = ViewBag.userType;
}

<br />
<div class="row">
    <div class="col-sm-3">
        <partial name="_CustomerSidebar" />
    </div>
    <div class="col-sm-9">
        <h2>@ViewData["Title"]</h2>
        <hr />
        <partial name="_VideoRequestsTable" />
        @*<table id="videoRequests" class="table">
            <thead>
                <tr>
                    <th>id</th>
                    <th>toFrom</th>
                    <th>person</th>
                    <th>statusId</th>
                    <th>statusName</th>
                    <th>dateCreated</th>
                    <th>deadline</th>
                </tr>
            </thead>
        </table>*@
    </div>
</div>

<link href="~/lib/DataTables/datatables.css" rel="stylesheet" />

@section Scripts {
    <script src="~/lib/DataTables/datatables.js"></script>
    @*<script src="~/js/VideoRequestDatatable.js"></script>*@
    <script>
        $(document).ready(function () {
            initVideoRequestsDatatable();
        });
    </script>
    @*<script>
            var userType = "@ViewBag.userType";
            var talentType = "@UserTypesEnum.talent.ToString()";
            var customerType = "@UserTypesEnum.customer.ToString()";
        </script>
        <script src="~/lib/DataTables/datatables.js"></script>
        <script src="~/js/VideoRequestDatatable.js"></script>*@

    @*<script>
            var userType = "@ViewBag.userType";

            $(document).ready(function () {
                //alert(userType);
                $("#videoRequests").DataTable({
                    searching: false,
                    ordering: false,
                    processing: true,
                    serverSide: true,
                    //lengthChange: false,
                    //language: {
                    //    infoFiltered: " ",
                    //    info: " ",
                    //    processing: Resource.Loading + "...",
                    //    zeroRecords: Resource.ZeroRecords,
                    //    infoEmpty: "empty",
                    //    paginate: {
                    //        previous: " ",
                    //        next: " ",
                    //    }
                    //},
                    ajax:
                    {
                        url: "/VideoRequestSearch/",
                        type: "POST",
                        //contentType: "application/json",
                        //datatype: "json",
                        //data: function (d) {
                        //    d.modelVM = searchVM;
                        //    return JSON.stringify(d);
                        //},
                        //complete: function () {
                        //    StartLoadingImagesAsync();
                        //}
                    },
                    "columnDefs": [
                        {
                            "targets": [0],
                            "visible": false,
                        },
                        {
                            "targets": [3],
                            "visible": false
                        }
                    ],
                    columns: [
                        { "data": "id", "name": "id", "autoWidth": true },
                        {
                            "data": null, "name": "toFrom", "title": "Для кого", "autoWidth": true,
                            "render": function (data, type, full, meta) {
                                var html = "";
                                html += "<p>Для " + full.to;
                                if (full.from != null)
                                    html += " от " + full.from;
                                html += ' <i class="glyphicon glyphicon-info-sign" data-toggle="tooltip" data-placement="right" title="' + full.instructions + '"></i>';
                                html += "</p>";

                                return html;
                            }
                        },
                        {
                            "data": "person", /*"name": "person",*/ "title": "Пользователь", "autoWidth": true,
                            "render": function (data, type, full, meta) {
                                var html = '<img src="' + full.person.avatar.url + '" alt="Avatar" class="img-circle img-thumbnail" height="50" width="50" />'
                                if (userType == "@UserTypesEnum.talent.ToString()")
                                    html += "<br /><a href='/Customer/Details/" + full.person.id + "'>";
                                else
                                    html += "<br /><a href='/Talent/Details/" + full.person.id + "'>";
                                html += full.person.fullName;
                                html += "</a>";
                                return html;
                            }
                        },
                        {
                            //"data": "statusId", "name": "statusId", "autoWidth": true,
                            "render": function (data, type, full, meta) { return '' + full.status.id + ''; }
                        },
                        {
                            "data": null, "name": "statusName", "title": "Статус", "autoWidth": true,
                            "render": function (data, type, full, meta) { return '' + full.status.name + ''; }
                        },
                        { "data": "dateCreated", "name": "dateCreated", "title": "Дата создания", "autoWidth": true },
                        {
                            "data": null, /*"name": "deadline", */"title": "Дедлайн", "autoWidth": true,
                            "render": function (data, type, full, meta) { return '' + full.deadlineText + ''; }
                        }
                        //{
                        //    "render": function (data, type, full, meta) { return '<a class="btn btn-info" href="/Demo/Edit/' + full.CustomerID + '">Edit</a>'; }
                        //},
                        //{
                        //    data: null, render: function (data, type, row) {
                        //        return "<a href='#' class='btn btn-danger' onclick=DeleteData('" + row.CustomerID + "'); >Delete</a>";
                        //    }
                        //},

                    ],
                    fnDrawCallback: function (oSettings) {
                        //alert("fff");
                        //console.log(oSettings.json.recordsFiltered);//do whatever with your custom response
                        //$("#recordsFiltered").text(oSettings.json.recordsFiltered);

                        $('[data-toggle="tooltip"]').tooltip();
                    }
                });
            });
        </script>*@
}