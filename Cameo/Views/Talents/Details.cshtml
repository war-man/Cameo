@model Cameo.ViewModels.TalentDetailsVM
@using Cameo.Models.Enums

@{
    ViewData["Title"] = "Details";
    ViewData["talent"] = Model;
}

<h2>@ViewData["Title"]</h2>

<div class="row" id="profileBox">
    <div class="col-lg-offset-1 col-lg-3 col-sm-4" id="photoBox">
        <img id="imgContainer" src="@Model.Avatar.Url" alt="Avatar" class="img-circle img-thumbnail" height="150" width="150" />
    </div>
    <div class="col-lg-7 col-sm-8" id="infoBox">
        <div class="row">
            <div class="col-sm-12">
                <h1>@Model.FullName</h1>
                <br />
                <div class="projectsBox">
                    @{
                        string projects = "";
                        foreach (var item in Model.Projects)
                        {
                            projects += item.Name + ", ";
                        }
                        if (projects.Length > 0)
                        {
                            projects = projects.Substring(0, projects.Length - 2);
                        }

                        @projects
                    }
                </div>
                <br />
                <div class="bioBox">
                    <span>@Model.Bio</span>
                </div>
                <br />
                <div class="bookBox">
                    @if (Model.IsAvailable)
                    {
                        <button type="button" class="btn btn-lg btn-primary" data-toggle="modal" data-target="#bookModal">
                            Отправить запрос @Model.FullName (@Model.Price.ToString("### ### ###") сум )
                        </button>
                    }
                    else
                    {
                        <button type="button" disabled="disabled">Временно недоступен</button>
                    }
                </div>
                <br />
                <div class="bookBox">
                    <span>Обычно отвечает в течение 2х дней</span>
                </div>
                <br />
                <div class="reviewsBox">
                    <span><strong>292 Отзывов</strong></span>
                </div>
                <br />
                <div class="categoriesBox">
                    @{
                        foreach (var item in Model.Categories)
                        {
                            <span>
                                <a class="btn btn-default" href="/Talents?cat=@item.ID">@item.Name</a>
                            </span>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row" id="latestBox">

</div>

<!-- Modal -->
<div id="bookModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Заказать видео от @Model.FullName</h4>
            </div>
            <div class="modal-body">
                <form asp-action="Create" asp-controller="VideoRequest"
                      data-ajax="true"
                      data-ajax-method="POST"
                      data-ajax-mode="replace"
                      data-ajax-update="#ajaxresult">
                    <div id="ajaxresult">
                        @await Html.PartialAsync(
                            "/Views/VideoRequest/_Create.cshtml",
                            new Cameo.ViewModels.VideoRequestCreateVM() { TypeID = (int)VideoRequestTypeEnum.someone })
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}